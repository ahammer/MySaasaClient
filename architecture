MySassa Client Architecture Overview

The Client consists of 4 Main Components

1. Java SDK
2. Android Library
3. Android White Label


Java SDK

The Java SDK provides a standard Java 7 Library to interact with the system. 
Basic application state and communications is all handled with this library.

It consists primarily of a Gateway and a Service.

	Gateway - Autogenerated network code to map to MySassa Server API calls.
	Service - Manages session state/caching and logic. Uses a event bus in order to broadcast updates asynchronously to the UI.

Android Library

The Android Library consists of Android Components that utilize the Java SDK. It also contains all the components used by the white label application.
There is a collection of Adapters, Activities, Views, Fragments preconfigured and ready to go or be extended by your application.

Android White Label

The white label application by default contains no code. All the implementation is contained in the library.
The default white label contains just the default manifest. This registers the included activities and entry point of the application.
To customize, you can create build-flavours with gradle. These can contain custom code and resources, 
while also allowing resource over-rides for the default values. This allows a huge amount of customization on the white label.





Design Methodology.

This was designed to create tailored software verticals and easily branded/extensible architecture for app. The idea is to build out the white label
until it matches the base styles of the system and provides the user experience your organization is trying to provide. Build flavours and variants are created
then to visually customize the application and create fully customizable variants with the minimal footprint.

