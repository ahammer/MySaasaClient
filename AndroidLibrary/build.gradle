apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'

apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        mavenCentral()
	jcenter() 
   }

    dependencies {
    }
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile rootProject.supportLibraryV4
    compile rootProject.supportLibraryV13
    compile rootProject.googleMessaging
    compile rootProject.supportCardView
    compile rootProject.supportDesign

    compile rootProject.mysaasaJava
    compile 'com.mysaasa:ModelViewLib:0.1.0'
    compile files('libs/crouton-1.8.1.jar')
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.picasso:picasso:2.3.4'
}



ext {
    bintrayRepo = 'maven'
    bintrayName = 'MySaasa-Android'
 
    publishedGroupId = 'com.mysaasa'
    libraryName = 'MySaasa-Android'
    artifact = 'MySaasa-Android'
 
    libraryDescription = 'MySaasa Android Library'
 
    siteUrl = 'https://github.com/ahammer/MySaasaClient'
    gitUrl = 'https://github.com/ahammer/MySaasaClient.git'
 
    libraryVersion = rootProject.mavenVersion
 
    developerId = 'ahammer'
    developerName = 'Adam Hammer'
    developerEmail = 'adamhammer2@gmail.com'
 
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}


version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {

    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
		passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
